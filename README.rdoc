== README

This README would normally document whatever steps are necessary to get the
application up and running.

Things you may want to cover:

* Ruby version
* System dependencies
* Configuration
* Database creation
* Database initialization
* How to run the test suite
* Services (job queues, cache servers, search engines, etc.)
* Deployment instructions
* ...


Please feel free to use a different markup language if you do not plan to run
<tt>rake doc:app</tt>.

testing specs for recipes:
name: string
summary: text
description: text

- name must be present
- name must be between 5 characters and less than 100 characters
- summary must be present
- summary bust be between 10 charactes and less than 150 characters
- description must be present
- summary bust be between 20 charactes and less than 500 characters
- chef_id must be present

testing for chefs:
chefname: string
email: string

- chefname must be present
- chefname must be between 3 characters and less than 40 characters
- emails bust be present
- email must be unique (since we'll use this for loing later)
- email must be valid

Chefs:

What we have already:
- Chef model and validation
- chefs table with columns chefname and email

What we need to do:
- Add passwords to the chefs table so chefs can be authenticated and logged initialization
- Use email as log in credentialsk, since email is unique
- Ability to register new chefs to use the app
- Ability to display chefs profile
- Ability to list chefs using the app
- Ability for chefs to log in and log out of the app
- Restrict actions like create recipe, edit recipe and like feature to logged in chefs only
- Restricting edit of recipes by chefs who created the recipes

rails provides 'has secure password'

Authentication updates:

- Show recipe page -> Ability to edit/update only own recipe
- Naviation partial -> Toggle Menu, restrict new
- Restrict thumgs up and thumgs down action to logged_in user only
- Recipe - update to current_user
- Like - update to current_user
- Before_action :require_user, except: [:show, :index]
- Before_action :requjre_same_user for chefs, only: [:edit, :update]

Many to Many Association:
1. We will implement using has_many through association
2. Requires a join table
3. One object/row in one table can be associated with multiple rows in a wnd table and vice-versa



Common commands




$ git status
$ git add â€“A
$ git commit - m "add user and create 1 to many relationship with articles"
$ git status
$ git push -u origin master

$ git remote add origin <git@github.com:TrishZ/myrecipes.git>
$ git remote -v


$ git push origin master         (push to master branch)
$ git push heroku master         (deploy to heroku)

$ heroku run rake db:migrate
$ heroku apps
$ heroku help
$ heroku version
$ heroku login
$ heroku keys:add
$ heroku create
$ heroku rename <trish-myrecipesrails>

$ rails server -b $IP -p $PORT

$ rails generate migration <file_name>
$ rake db:migrate

$ rake routes
$ rake routes | grep Style